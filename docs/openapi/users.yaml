openapi: 3.0.3
info:
  title: Verilog OJ User Management API
  description: 用户管理相关API
  version: 1.0.0
  contact:
    name: API Support
    email: support@verilog-oj.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:8080/api/v1
    description: 开发环境
  - url: https://api.verilog-oj.com/api/v1
    description: 生产环境

paths:
  /users/register:
    post:
      tags:
        - 用户管理
      summary: 用户注册
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: 注册成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/login:
    post:
      tags:
        - 用户管理
      summary: 用户登录
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: 用户名或密码错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/profile:
    get:
      tags:
        - 用户管理
      summary: 获取个人信息
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - 用户管理
      summary: 更新个人信息
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        code:
          type: integer

    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        nickname:
          type: string
        avatar:
          type: string
        school:
          type: string
        student_id:
          type: string
        role:
          type: string
          enum: [student, teacher, admin, super_admin]
        solved:
          type: integer
        submitted:
          type: integer
        rating:
          type: integer
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
        last_login_at:
          type: string
          format: date-time

    RegisterRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 20
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
        nickname:
          type: string
          maxLength: 50
        school:
          type: string
          maxLength: 100
        student_id:
          type: string
          maxLength: 20

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    LoginResponse:
      type: object
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/User'
        expires_in:
          type: integer

    UpdateProfileRequest:
      type: object
      properties:
        nickname:
          type: string
          maxLength: 50
        avatar:
          type: string
        school:
          type: string
          maxLength: 100
        student_id:
          type: string
          maxLength: 20